'''
list_1 = []
list_2 = list()
list_3 = [1, 2, 3, 8]
# print(list_1)
# print(list_2)
print(list_3)
print(*list_3)

for i in list_3:
    print(i)

print(len(list_3))

print(list_3[-1])

list_3.append(12)
print(list_3)

print(list_1)
for i in range(5):
    list_1.append(i)
    print(list_1)

'''

# # 1.  –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ —Å–ø–∏—Å–∫–∞.
# #  –ú–µ—Ç–æ–¥ pop —É–¥–∞–ª—è–µ—Ç –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç –∏–∑ —Å–ø–∏—Å–∫–∞:
# list_1 = [12, 7, -1, 21, 0]
# a = list_1.pop() # - –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç
# print(a) # 0 
# print(list_1.pop())# 0 - —É–¥–∞–ª—è–µ—Ç –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç
# print(*list_1) # [12, 7, -1, 21]
# print(list_1.pop())# 21
# print(list_1) # [12, 7, -1]
# print(list_1.pop()) # -1
# print(list_1)# [12, 7]

# # 2.  –£–¥–∞–ª–µ–Ω–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –∏–∑ —Å–ø–∏—Å–∫–∞.
# #  –ù–∞–¥–æ —É–∫–∞–∑–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–∞ –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ —Ñ—É–Ω–∫—Ü–∏–∏ pop:
# list_1 = [12, 7, -1, 21, 0]
# print(list_1.pop(1))# 12 
# print(list_1) # [7, -1, 21, 0]

# # 3.  –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ –Ω–∞ –Ω—É–∂–Ω—É—é –ø–æ–∑–∏—Ü–∏—é.
# #   –§—É–Ω–∫—Ü–∏—è insert ‚Äî —É–∫–∞–∑–∞–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–∞ (–ø–æ–∑–∏—Ü–∏–∏) –∏ –∑–Ω–∞—á–µ–Ω–∏—è.
# list_1 = [12, 7, -1, 21, 0]
# print(list_1.insert(2, 11))
# print(list_1) # [12, 7, 11, -1, 21, 0]


# # –°—Ä–µ–∑ —Å–ø–∏—Å–∫–∞
# list_1 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
# print(list_1[0]) # 1
# print(list_1[1]) # 2
# print(list_1[len(list_1)-1]) # 10
# print(list_1[-5]) # 6
# print(list_1[:]) # [1, 2, 3, 4,5, 6, 7, 8, 9, 10]
# print(list_1[:2]) # [1, 2]
# print(list_1[len(list_1)-2:]) #[9,10]
# print(list_1[2:9]) # [3, 4,5, 6, 7, 8, 9]
# print(list_1[6:-18]) # []
# print(list_1[0:len(list_1):6]) # [1,7]
# print(list_1[::6]) # [1, 7]


# ## –ö–û–†–¢–ï–ñ -  —ç—Ç–æ –Ω–µ–∏–∑–º–µ–Ω—è–µ–º—ã–π —Å–ø–∏—Å–æ–∫
# t = () # —Å–æ–∑–¥–∞–Ω–∏–µ –ø—É—Å—Ç–æ–≥–æ –∫–æ—Ä—Ç–µ–∂–∞
# print(type(t))  # class <'tuple'>
# t = (1,)        # –≤ –∫–æ–Ω—Ü–µ —Å—Ç–∞–≤–∏–º –∑–∞–ø—è—Ç—É—é
# print(type(t))  # class <'tuple'>
# t = (1)
# print(type(t))  # <class 'int'>

# t = (28, 9, 1990)
# print(t)
# print(type(t))

# t = [28, 9, 1990]
# print(t)
# print(type(t))

# t = tuple(t)
# print(t)
# print(type(t))

# a, b, c = t # - —Ä–∞—Å–ø–∞–∫–æ–≤–∫–∞ –∫–æ—Ä—Ç–µ–∂–∞
# print(a,b,c)

# for i in t:
#     print(i)

# for i in range(len(t)):
#     print(t[i])

# colors = ['red', 'green', 'blue'] # —Å–ø–∏—Å–æ–∫
# print(colors)  # ['red', 'green', 'blue']

# t = tuple(colors) # –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–ª–∏ –≤ –∫–æ—Ä—Ç–µ–∂
# print(t) # ('red', 'green', 'blue')

# t = tuple(['red', 'green', 'blue'])  # –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–ª–∏ –≤ –∫–æ—Ä—Ç–µ–∂

# print(t[0]) # red
# print(t[2]) # blue

# for e in t:
#     print(e) # red green blue

# t[0] = 'black'# TypeError: 'tuple' object does notsupport (–Ω–µ–ª—å–∑—è –∏–∑–º–µ–Ω—è—Ç—å –∫–æ—Ä—Ç–µ–∂)

# # –ú–æ–∂–Ω–æ —Ä–∞—Å–ø–∞–∫–æ–≤–∞—Ç—å –∫–æ—Ä—Ç–µ–∂ –≤ –Ω–µ–∑–∞–≤–∏—Å–∏–º—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ:
# t = tuple(['red', 'green', 'blue'])
# red, green, blue = t
# print('r:{} g:{} b:{}'.format(red, green, blue))  #r:red g:green b:blue

# –°–ª–æ–≤–∞—Ä–∏
#  üí°–°–ª–æ–≤–∞—Ä–∏ ‚Äî –Ω–µ—É–ø–æ—Ä—è–¥–æ—á–µ–Ω–Ω—ã–µ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤ —Å –¥–æ—Å—Ç—É–ø–æ–º –ø–æ –∫–ª—é—á—É.

# dictionary = {}
# d = dict()
# d['q'] = 'qwerty'
# print(d)
# d['w'] = 'werty'
# print(d)
# print(d['q'])
# print(d['w'])

# dictionary ={'up': '‚Üë', 'left': '‚Üê', 'down': '‚Üì', 'right': '‚Üí'}
# print(dictionary)   # {'up':'‚Üë', 'left':'‚Üê', 'down':'‚Üì','right':'‚Üí'}
# print(dictionary['left'])   # ‚Üê
# dictionary[895] = 98989
# print(dictionary)

# # —Ç–∏–ø—ã –∫–ª—é—á–µ–π –º–æ–≥—É—Ç –æ—Ç–ª–∏—á–∞—Ç—å—Å—è
# print(dictionary['up'])# ‚Üë
# # —Ç–∏–ø—ã –∫–ª—é—á–µ–π –º–æ–≥—É—Ç –æ—Ç–ª–∏—á–∞—Ç—å—Å—è
# dictionary['left'] = '‚áê'
# print(dictionary['left'])# ‚áê
# print(dictionary['type'])# KeyError: 'type'
# del dictionary['left']   # —É–¥–∞–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞
# for item in dictionary:
#     print(item)
#     print('{}: {}'.format(item, dictionary[item]))

# print(dictionary.items())   # –≤—ã–≤–æ–¥–∏—Ç —Å–ø–∏—Å–æ–∫, –≤–Ω—É—Ç—Ä–∏ –∫–æ—Ç–æ—Ä–æ–≥–æ –∫–æ—Ä—Ç–µ–∂–∏, –≤ –∫–æ—Ä—Ç–µ–∂–µ: –∫–ª—é—á, –∑–Ω–∞—á–µ–Ω–∏–µ.
#                             # dict_items([('up', '‚Üë'), ('left', '‚Üê'), ('down', '‚Üì'), ('right', '‚Üí'), (895, 98989)])
# for (k,v) in dictionary.items():
#     print(k, v)
# # up: ‚Üë
# # down: ‚Üì
# # right: ‚Üí

# # –ú–Ω–æ–∂–µ—Å—Ç–≤–∞
# #  üí°–ú–Ω–æ–∂–µ—Å—Ç–≤–∞ —Å–æ–¥–µ—Ä–∂–∞—Ç –≤ —Å–µ–±–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã,–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —É–ø–æ—Ä—è–¥–æ—á–µ–Ω–Ω—ã–µ. 

# colors = {'red', 'green', 'blue'}
# print(colors)   # {'red', 'green', 'blue'}

# colors.add('red')
# print(colors)   # {'red', 'green', 'blue'}

# colors.add('gray')
# print(colors)   # {'red', 'green', 'blue','gray'}

# colors.remove('red')
# print(colors)   # {'green', 'blue','gray'}

# colors.remove('red')# KeyError: 'red' –í—ã–¥–∞–µ—Ç –æ—à–∏–±–∫—É.
# colors.discard('red')   # ok. –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –µ—Å—Ç—å –ª–∏ –¥–∞–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –Ω–∞—à–µ–º –º–Ω–æ–∂–µ—Å—Ç–≤–µ. 
                        #–ï—Å–ª–∏ –æ–Ω–æ –µ—Å—Ç—å, —Ç–æ —É–¥–∞–ª—è–µ—Ç, –µ—Å–ª–∏ –Ω–µ—Ç, —Ç–æ –Ω–µ –≤—ã–¥–∞–µ—Ç –æ—à–∏–±–∫—É.
# print(colors)   # {'green', 'blue','gray'}

# colors.clear()  # { } –æ—á–∏—â–∞–µ—Ç –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –∏–∑ —Å–ø–∏—Å–∫–∞.
# print(colors)   # set()

# q = set()   # set() - —Å–æ–∑–¥–∞–µ—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–æ
# print(q)


# # –û–ø–µ—Ä–∞—Ü–∏–∏ —Å–æ –º–Ω–æ–∂–µ—Å—Ç–≤–∞–º–∏ –≤ Python

# a = {1, 2, 3, 5, 8}
# b = {2, 5, 8, 13, 21}
# c = a.copy()            # c = {1, 2, 3, 5, 8}
# u = a.union(b)          # u = {1, 2, 3, 5, 8, 13, 21}
# i = a.intersection(b)   # i = {8, 2, 5}  –ø–µ—Ä–µ—Å–µ—á–µ–Ω–∏–µ
# dl = a.difference(b)    # dl = {1, 3}
# dr = b.difference(a)    # dr = {13, 21}
# q = a.union(b).difference(a.intersection(b))  # {1, 21,3, 13}


# # –ù–µ–∏–∑–º–µ–Ω—è–µ–º–æ–µ –∏–ª–∏ –∑–∞–º–æ—Ä–æ–∂–µ–Ω–Ω–æ–µ –º–Ω–æ–∂–µ—Å—Ç–≤–æ(frozenset) ‚Äî –º–Ω–æ–∂–µ—Å—Ç–≤–æ, —Å –∫–æ—Ç–æ—Ä—ã–º 
# # –Ω–µ –±—É–¥—É—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –º–µ—Ç–æ–¥—ã —É–¥–∞–ª–µ–Ω–∏—è –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è.
# a = {1, 2, 3, 5, 8}
# b = frozenset(a)
# print(b)    # frozenset({1, 2, 3, 5, 8})


# List Comprehension (–≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Å–ø–∏—Å–∫–æ–≤)
# List comprehension ‚Äî —ç—Ç–æ —É–ø—Ä–æ—â–µ–Ω–Ω—ã–π –ø–æ–¥—Ö–æ–¥ –∫ —Å–æ–∑–¥–∞–Ω–∏—é —Å–ø–∏—Å–∫–∞, –∫–æ—Ç–æ—Ä—ã–π
#  –∑–∞–¥–µ–π—Å—Ç–≤—É–µ—Ç —Ü–∏–∫–ª for, –∞ —Ç–∞–∫–∂–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ if-else –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ç–æ–≥–æ, —á—Ç–æ –≤ –∏—Ç–æ–≥–µ
#  –æ–∫–∞–∂–µ—Ç—Å—è –≤ —Ñ–∏–Ω–∞–ª—å–Ω–æ–º —Å–ø–∏—Å–∫–µ.

# 1.–ü—Ä–æ—Å—Ç–∞—è —Å–∏—Ç—É–∞—Ü–∏—è ‚Äî —Å–ø–∏—Å–æ–∫:
# list_1 = [exp for item in iterable]

# 2.–í—ã–±–æ—Ä–∫–∞ –ø–æ –∑–∞–¥–∞–Ω–Ω–æ–º—É —É—Å–ª–æ–≤–∏—é:
# list_1 = [exp for item in iterable (if conditional)]

# # 1.–°–æ–∑–¥–∞—Ç—å —Å–ø–∏—Å–æ–∫ —á–∏—Å–µ–ª –æ—Ç 1 –¥–æ 100
# list_1 = []
# for i in range(1, 101):
#     list_1.append(i)
# print(list_1)   # [1, 2, 3,..., 100]

# # # –≠—Ç—É –∂–µ —Ñ—É–Ω–∫—Ü–∏—é –º–æ–∂–Ω–æ –∑–∞–ø–∏—Å–∞—Ç—å —Ç–∞–∫:
# list_1 = [i for i in range(1, 101)] # [1, 2, 3,...,100]
# print(list_1)

# # 2.–î–æ–±–∞–≤–∏—Ç—å —É—Å–ª–æ–≤–∏–µ (—Ç–æ–ª—å–∫–æ —á—ë—Ç–Ω—ã–µ —á–∏—Å–ª–∞)
# list_1 = [i for i in range(1, 101) if i % 2 == 0]   # [2, 4, 6,..., 100]
# print(list_1)

 
# # –î–æ–ø—É—Å—Ç–∏–º, –≤—ã —Ä–µ—à–∏–ª–∏ —Å–æ–∑–¥–∞—Ç—å –ø–∞—Ä—ã –∫–∞–∂–¥–æ–º—É –∏–∑ —á–∏—Å–µ–ª (–∫–æ—Ä—Ç–µ–∂–∏)
# list_1 = [(i, i*i ) for i in range(1,101) if i % 2 == 0]   #[(2,2),(4,4),..., (100, 100)]
# print(list_1)

# print()
# list_1 = [(i * 2, i / 2 ) for i in range(1,101) if i % 2 == 0]   # –º–æ–∂–Ω–æ —É–º–Ω–æ–∂–∞—Ç—å, –¥–µ–ª–∏—Ç—å, –ø—Ä–∏–±–∞–≤–ª—è—Ç—å, –≤—ã—á–∏—Ç–∞—Ç—å.
# print(list_1)


 


 
